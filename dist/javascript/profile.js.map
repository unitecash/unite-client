{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/pages/profile.js"],"names":["window","pageInit","currentUserAddress","Utilities","resolveGETParam","config","userAddress","leftButton","ImageButton","text","image","onclick","SettingsWindow","render","NavigationMenu","pageTitle","pageIcon","rightButton","CompositionWindow","showBackButton","ProfilePage","React","Component","ReactDOM","document","getElementById","currentUser","User","then","user","loadPosts","inlineName","name","getInlineName","$","append","onPostLoad","post","Promise","resolve","reject","sender","init","result"],"mappings":"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","file":"javascript/profile.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/pages/profile.js\");\n","window.pageInit = () => {\n\n  // extract the target user's address from the URL string or use current user\n  window.currentUserAddress = Utilities.resolveGETParam('addr')\n  if (window.currentUserAddress === false) {\n    window.currentUserAddress = config.userAddress\n  }\n\n  // show the settings button if the profile is the logged-in user\n  var leftButton = ''\n  if (window.currentUserAddress === config.userAddress) {\n    leftButton = new ImageButton({\n      text: 'Settings',\n      image: './images/settings_icon.svg',\n      onclick: () => {\n        new SettingsWindow()\n      }\n    }).render()\n  }\n\n  // create the navigation menu\n  new NavigationMenu({\n    pageTitle: 'Profile',\n    pageIcon: './images/profile_icon.svg',\n    leftButton: leftButton,\n    rightButton: new ImageButton({\n      text: 'New Post',\n      image: './images/compose_icon.svg',\n      onclick: () => {\n        new CompositionWindow()\n      }\n    }).render(),\n    showBackButton: (window.currentUserAddress !== config.userAddress)\n  })\n\n  // define a React component for the page\n  class ProfilePage extends React.Component {\n    render () {\n      return (\n        <div className=\"content\">\n          <div className=\"UIPanel center center-text\">\n            <img id=\"profileImage\" src=\"./images/unite_icon.svg\" className=\"ProfileImage center\" />\n            <p id=\"myName\">loading...</p>\n            <p id=\"profileText\">No tagline set</p>\n            <p id=\"editButton\" className=\"center\">Edit...</p>\n          </div>\n          <div id=\"posts\">\n          </div>\n        </div>\n      )\n    }\n  }\n\n  ReactDOM.render(<ProfilePage />, document.getElementById('app'))\n\n  // create a user and load their properties into the page\n  window.currentUser = new User(window.currentUserAddress).then((user) => {\n    user.loadPosts()\n\n    var inlineName = user.name.getInlineName()\n    $('#myName').text('')\n    $('#myName').append('Hi, ')\n    $('#myName').append(inlineName)\n    $('#myName').append('!')\n\n  })\n}\n\nwindow.onPostLoad = function (post) {\n  return new Promise((resolve, reject) => {\n    // Only display posts sent by this user\n    if (post.sender === window.currentUserAddress) {\n      post.init().then((result) => {\n        resolve (result)\n      })\n    } else {\n      resolve (false)\n    }\n  })\n}\n"],"sourceRoot":""}